using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using BusinessLayer;
using DataAccess;

namespace WinFrontEnd
{
    public partial class FormBuscaArticulo : Form
    {
        StockClass Stock = new StockClass();
        List<v_StockXAlmacen_1> Arti = new List<v_StockXAlmacen_1>();

        ClassValidaFormulario cvf = new ClassValidaFormulario();

        Boolean ListaLlena = false;

        String Escenario;
        int IdAlmacen;

        public string CodigoArticulo;

        public FormBuscaArticulo(string _escencario, int _idalmacen)
        {
            InitializeComponent();

            Escenario = _escencario;
            IdAlmacen = _idalmacen;

            this.KeyPreview = true;
            this.KeyPress += new KeyPressEventHandler(FormBuscaArticulo_KeyPress);
        }

        private void FormBuscaArticulo_KeyPress(object sender, KeyPressEventArgs e)
        {

            if (this.ActiveControl.Tag != null)
                cvf.ValidaTeclas(this.ActiveControl.Tag.ToString(), e);

        }

        private void SalirButton_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void FormBuscaArticulo_Load(object sender, EventArgs e)
        {
            Inicializa();

        }

        private void Inicializa()
        {
            switch (Escenario)
            {
                case "Total": //Listado total de artículos activos
                    ArticuloBindingSource.DataSource = Stock.ListadoBusquedaTodosActivos();
                    break;
                case "TotalConPrecio":
                    ArticuloBindingSource.DataSource = Stock.ObtenerListadoIngreso(ArticuloTextBox.Text.Trim(' '));
                    break;
                case "PorAlmacenConStock": //Listado total de artículos con stock en un almacen
                    ArticuloBindingSource.DataSource = Stock.ObtenerListadoStock(IdAlmacen, false, 2, "");
                    break;
            }
            
            if (GrillaDataGridView.RowCount > 0)
                ListaLlena = true;
            else
                ListaLlena = false;

        }

        private void ArticuloTextBox_TextChanged(object sender, EventArgs e)
        {

            if (!string.IsNullOrEmpty(ArticuloTextBox.Text.Trim()))
            {

                switch (Escenario)
                {
                    case "Total": //Listado de artículos activos filtrados por descripción
                        ArticuloBindingSource.DataSource = Stock.ListadoBusquedaXDescripcionArticuloActivos(ArticuloTextBox.Text.Trim(' '));
                        break;
                    case "TotalConPrecio":
                        ArticuloBindingSource.DataSource = Stock.ObtenerListadoIngreso(ArticuloTextBox.Text.Trim(' '));
                        break;
                    case "PorAlmacenConStock": //Listado de artículos con stock en un almacen filtrados por descripción
                        ArticuloBindingSource.DataSource = Stock.ObtenerListadoStock(IdAlmacen, false, 2, ArticuloTextBox.Text.Trim(' '));
                        break;
                }
                
                if (GrillaDataGridView.RowCount > 0)
                    ListaLlena = true;
                else
                    ListaLlena = false;

            }
            else
            {

                Inicializa();

            }

        }

        private void ArticuloTextBox_KeyPress(object sender, KeyPressEventArgs e)
        {

            if (e.KeyChar == (char)(Keys.Enter))
            {

                e.Handled = true;

                SeleccionarButton_Click(sender, e);

            }

        }

        private void ArticuloTextBox_KeyDown(object sender, KeyEventArgs e)
        {
            e.Handled = true;

            if (GrillaDataGridView.RowCount > 0)
            {

                switch (e.KeyCode)
                {
                    case Keys.Down:
                        if (GrillaDataGridView.CurrentRow.Index < GrillaDataGridView.RowCount - 1)
                            GrillaDataGridView.CurrentCell = GrillaDataGridView.Rows[GrillaDataGridView.CurrentRow.Index + 1].Cells[GrillaDataGridView.CurrentCell.ColumnIndex];
                        break;
                    case Keys.Up:
                        if (GrillaDataGridView.CurrentRow.Index != 0)
                            GrillaDataGridView.CurrentCell = GrillaDataGridView.Rows[GrillaDataGridView.CurrentRow.Index - 1].Cells[GrillaDataGridView.CurrentCell.ColumnIndex];
                        break;
                }

            }
        }

        private void SeleccionarButton_Click(object sender, EventArgs e)
        {
            if (ListaLlena)
            {
                LlenaInformacion();

                this.DialogResult = DialogResult.OK;

                this.Close();
            }
            else
            {

                MessageBox.Show("No hay información de Artículo.", "S.G.V.", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);

            }

        }

        private void LlenaInformacion()
        {

            CodigoArticulo = GrillaDataGridView.CurrentRow.Cells[2].Value.ToString();

        }

        private void FormBuscarArticulo_FormClosed(object sender, FormClosedEventArgs e)
        {
            if (this.DialogResult == DialogResult.Cancel)
                CodigoArticulo = null;
        }

        private void GrillaDataGridView_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
        {

            SeleccionarButton_Click(sender, e);

        }

    }
}
