@page "/reportes/ventas-detalladas"
@using GSCommerce.Client.Components
@using GSCommerce.Client.Models
@using GSCommerce.Client.Models.DTOs.Reportes
@using System.Text
@using GSCommerce.Client.Services
@inject VentaService VentaService
@inject IJSRuntime JS

<ReportsBreadcrumb Title="Ventas Detalladas" />

<div class="row mb-3">
    <div class="col-md-3">
        <label>Desde:</label>
        <InputDate @bind-Value="desde" class="form-control" />
    </div>
    <div class="col-md-3">
        <label>Hasta:</label>
        <InputDate @bind-Value="hasta" class="form-control" />
    </div>
    <div class="col-md-3 d-flex align-items-end">
        <button class="btn btn-primary w-100" @onclick="Buscar">🔍 Buscar</button>
    </div>
    <div class="col-md-3 d-flex align-items-end">
        <button class="btn btn-success w-100" @onclick="ExportarPDF">📄 Exportar a PDF</button>
    </div>
</div>

@if (ventas.Any())
{
    <table class="table table-striped table-bordered">
        <thead class="table-light">
            <tr>
                <th>Fecha</th>
                <th>Tipo Doc</th>
                <th>Serie</th>
                <th>Número</th>
                <th>Cliente</th>
                <th>Total</th>
                <th>Estado</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var v in ventas)
            {
                <tr>
                    <td>@v.Fecha.ToString("dd/MM/yyyy")</td>
                    <td>@v.TipoDocumento</td>
                    <td>@v.Serie</td>
                    <td>@v.Numero.ToString("D8")</td>
                    <td>@v.NombreCliente</td>
                    <td>S/ @v.Total.ToString("N2")</td>
                    <td>@v.Estado</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="alert alert-info text-center">No se encontraron ventas.</div>
}

@code {
    private List<VentaConsultaDTO> ventas = new();
    private DateTime desde = DateTime.Today;
    private DateTime hasta = DateTime.Today;

    private async Task Buscar()
    {
        ventas = await VentaService.ObtenerVentasAsync(desde, hasta);
    }

    private async Task ExportarPDF()
    {
        var sb = new StringBuilder();
        sb.AppendLine("<h2 style='text-align:center;'>Ventas Detalladas</h2>");
        sb.AppendLine($"<p><strong>Desde:</strong> {desde:dd/MM/yyyy} <strong>Hasta:</strong> {hasta:dd/MM/yyyy}</p>");
        sb.AppendLine("<table border='1' cellpadding='5' cellspacing='0' style='width:100%; border-collapse:collapse;'>");
        sb.AppendLine("<thead><tr><th>Fecha</th><th>Tipo Doc</th><th>Serie</th><th>Número</th><th>Cliente</th><th>Total</th><th>Estado</th></tr></thead>");
        sb.AppendLine("<tbody>");
        foreach (var v in ventas)
        {
            sb.AppendLine("<tr>");
            sb.AppendLine($"<td>{v.Fecha:dd/MM/yyyy}</td>");
            sb.AppendLine($"<td>{v.TipoDocumento}</td>");
            sb.AppendLine($"<td>{v.Serie}</td>");
            sb.AppendLine($"<td>{v.Numero:D8}</td>");
            sb.AppendLine($"<td>{v.NombreCliente}</td>");
            sb.AppendLine($"<td>S/ {v.Total:N2}</td>");
            sb.AppendLine($"<td>{v.Estado}</td>");
            sb.AppendLine("</tr>");
        }
        sb.AppendLine("</tbody></table>");

        await JS.InvokeVoidAsync("generarPDFDesdeHTML", sb.ToString(), $"VentasDetalladas_{DateTime.Now:yyyyMMdd_HHmmss}");
    }

    protected override async Task OnInitializedAsync()
    {
        await Buscar();
    }
}