@page "/reportes/ranking-vendedoras"
@using GSCommerce.Client.Components
@using GSCommerce.Client.Models
@using GSCommerce.Client.Models.DTOs.Reportes
@using GSCommerce.Client.Services
@inject ReporteService ReporteService
@inject AlmacenService AlmacenService
@inject AuthService AuthService

<ReportsBreadcrumb Title="Ranking de Vendedoras" />

<div class="row mb-3">
    <div class="col-md-4">
        <label>Desde:</label>
        <InputDate @bind-Value="desde" class="form-control" />
    </div>
    <div class="col-md-4">
        <label>Hasta:</label>
        <InputDate @bind-Value="hasta" class="form-control" />
    </div>
    <div class="col-md-4 d-flex align-items-end">
        <button class="btn btn-primary w-100" @onclick="BuscarRanking">Buscar</button>
    </div>
</div>
<div class="row mb-3">
    @if (cargo == "ADMINISTRADOR")
    {
        <div class="col-md-4">
            <label><input type="radio" value="false" @onchange="e => porAlmacen = false" checked="@(!porAlmacen)" /> Global</label>
            <label class="ms-3"><input type="radio" value="true" @onchange="e => porAlmacen = true" checked="@(porAlmacen)" /> Por Almacén</label>
            <select class="form-select mt-1" @bind="idAlmacenSeleccionado" disabled="@(porAlmacen == false)">
                <option value="0">-- Seleccionar almacén --</option>
                @foreach (var a in almacenes)
                {
                    <option value="@a.IdAlmacen">@a.Nombre</option>
                }
            </select>
        </div>
    }
    else if (cargo == "CAJERO")
    {
        <div class="col-md-4">
            <label>Almacén:</label>
            <select class="form-select mt-1" @bind="idAlmacenSeleccionado" disabled>
                @foreach (var a in almacenes)
                {
                    <option value="@a.IdAlmacen">@a.Nombre</option>
                }
            </select>
        </div>
    }
</div>
@if (ranking.Any())
{
    <table class="table table-striped table-bordered">
        <thead class="table-dark">
            <tr>
                <th>#</th>
                <th>Vendedora</th>
                <th>Ventas Realizadas</th>
                <th>Monto Total</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in ranking.Select((r, i) => new { r, i }))
            {
                <tr>
                    <td>@(item.i + 1)</td>
                    <td>@item.r.Vendedora</td>
                    <td>@item.r.VentasRealizadas</td>
                    <td>S/ @item.r.TotalVentas.ToString("N2")</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="alert alert-info text-center">No hay ventas registradas en este rango.</div>
}

@code {
    private List<RankingVendedoraDTO> ranking = new();
    private DateTime desde = DateTime.Today.AddDays(-7);
    private List<AlmacenDTO> almacenes = new();
    private int idAlmacenSeleccionado;
    private bool porAlmacen = false;
    private DateTime hasta = DateTime.Today;
    private string? cargo;
    private int? idAlmacenUsuario;

    protected override async Task OnInitializedAsync()
    {
        almacenes = await AlmacenService.GetAlmacenes() ?? new();
        cargo = await AuthService.GetUserCargo();
        idAlmacenUsuario = await AuthService.GetUserAlmacenId();

        if (cargo == "CAJERO")
        {
            porAlmacen = true;
            idAlmacenSeleccionado = idAlmacenUsuario ?? 0;
            almacenes = almacenes.Where(a => a.IdAlmacen == idAlmacenSeleccionado).ToList();
        }

        await BuscarRanking();
    }


    private async Task BuscarRanking()
    {
        ranking = await ReporteService.ObtenerRankingVendedoras(
            desde,
            hasta,
            porAlmacen ? idAlmacenSeleccionado : (int?)null,
            porAlmacen);
    }
}
