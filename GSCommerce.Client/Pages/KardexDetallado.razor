@page "/kardex-detallado"
@using GSCommerce.Client.Models
@using GSCommerce.Client.Services
@using System.Linq
@inject KardexDetalladoService KardexDetalladoService
@inject AlmacenService AlmacenService
@inject AuthService AuthService
@inject IJSRuntime JS

<h3>📘 Kardex Detallado</h3>

<div class="card p-4">
    <div class="row mb-3">
        <div class="col-md-3">
            <label>Almacén</label>
            <select class="form-control" @bind="idAlmacen" disabled="@soloLecturaAlmacen">
                @if (!soloLecturaAlmacen)
                {
                    <option value="0">-- Todos --</option>
                }
                @foreach (var almacen in almacenes)
                {
                    <option value="@almacen.IdAlmacen">@almacen.Nombre</option>
                }
            </select>
        </div>
        <div class="col-md-3">
            <label>Desde</label>
            <input type="date" class="form-control" @bind="fechaDesde" />
        </div>
        <div class="col-md-3">
            <label>Hasta</label>
            <input type="date" class="form-control" @bind="fechaHasta" />
        </div>
        <div class="col-md-3">
            <label>Código o Nombre</label>
            <input type="text" class="form-control" @bind="textoBusqueda" @onkeypress="OnKeyEnter" />
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-md-3">
            <label>Familia</label>
            <input type="text" class="form-control" @bind="familia" />
        </div>
        <div class="col-md-3">
            <label>Línea</label>
            <input type="text" class="form-control" @bind="linea" />
        </div>
    </div>

    <div class="text-end mb-2">
        <button class="btn btn-primary" @onclick="BuscarKardex">🔍 Consultar</button>
        <button class="btn btn-success ms-2" @onclick="ExportarAExcel">📤 Excel</button>
    </div>

    @if (isLoading)
    {
        <p>🔄 Cargando movimientos...</p>
    }
    else if (kardexData.Any())
    {
        <div class="table-responsive">
            @if (string.Equals(cargo, "CAJERO", StringComparison.OrdinalIgnoreCase))
            {
                <table class="table table-striped table-bordered">
                    <thead class="table-light">
                        <tr>
                            <th>Almacén</th>
                            <th>Familia</th>
                            <th>Línea</th>
                            <th>Código</th>
                            <th>Artículo</th>
                            <th>Precio Venta</th>
                            <th>Operación</th>
                            <th>Fecha Operación</th>
                            <th>Saldo Inicial</th>
                            <th>Entrada</th>
                            <th>Salida</th>
                            <th>Saldo Final</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in kardexData)
                        {
                            <tr>
                                <td>@item.Almacen</td>
                                <td>@item.Familia</td>
                                <td>@item.Linea</td>
                                <td>@item.Codigo</td>
                                <td>@item.Articulo</td>
                                <td>@item.PrecioVenta?.ToString("0.00")</td>
                                <td>@item.Operacion</td>
                                <td>@item.Fecha?.ToString("dd/MM/yyyy")</td>
                                <td>@item.SaldoInicial</td>
                                <td>@item.Entrada</td>
                                <td>@item.Salida</td>
                                <td>@item.SaldoFinal</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <table class="table table-striped table-bordered">
                    <thead class="table-light">
                        <tr>
                            <th>Fecha</th>
                            <th>Familia</th>
                            <th>Línea</th>
                            <th>Almacén</th>
                            <th>Código</th>
                            <th>Artículo</th>
                            <th>Precio Compra</th>
                            <th>Precio Venta</th>
                            <th>Operación</th>
                            <th>Entrada</th>
                            <th>Salida</th>
                            <th>Saldo Final</th>
                            <th>Valor Entrada</th>
                            <th>Valor Salida</th>
                            <th>Valor Final</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in kardexData)
                        {
                            <tr>
                                <td>@item.Fecha?.ToString("dd/MM/yyyy")</td>
                                <td>@item.Familia</td>
                                <td>@item.Linea</td>
                                <td>@item.Almacen</td>
                                <td>@item.Codigo</td>
                                <td>@item.Articulo</td>
                                <td>@item.PrecioCompra.ToString("0.00")</td>
                                <td>@item.PrecioVenta?.ToString("0.00")</td>
                                <td>@item.Operacion</td>
                                <td>@item.Entrada</td>
                                <td>@item.Salida</td>
                                <td>@item.SaldoFinal</td>
                                <td>@item.ValorizadoEntrada?.ToString("0.00")</td>
                                <td>@item.ValorizadoSalida?.ToString("0.00")</td>
                                <td>@item.ValorizadoFinal?.ToString("0.00")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
        <div class="text-end mt-2">
            <small>@kardexData.Count registro(s)</small>
        </div>
    }
    else
    {
        <p>⚠️ No se encontraron movimientos.</p>
    }
</div>

@code {
    private List<KardexDetalladoDTO> kardexData = new();
    private List<AlmacenDTO> almacenes = new();
    private int idAlmacen = 0;
    private DateTime fechaDesde = DateTime.Today.AddMonths(-1);
    private DateTime fechaHasta = DateTime.Today;
    private string textoBusqueda = "";
    private string familia = "";
    private string linea = "";
    private bool isLoading = false;
    private bool soloLecturaAlmacen = false;
    private string? cargo;

    protected override async Task OnInitializedAsync()
    {
        almacenes = await AlmacenService.GetAlmacenes();
        cargo = await AuthService.GetUserCargo();
        if (!string.Equals(cargo, "ADMINISTRADOR", StringComparison.OrdinalIgnoreCase))
        {
            var userAlmacen = await AuthService.GetUserAlmacenId();
            idAlmacen = userAlmacen ?? 0;
            almacenes = almacenes.Where(a => a.IdAlmacen == idAlmacen).ToList();
            soloLecturaAlmacen = true;
        }
    }

    private async Task BuscarKardex()
    {
        isLoading = true;
        kardexData = await KardexDetalladoService.ObtenerKardexDetallado(
            textoBusqueda,
            idAlmacen == 0 ? null : idAlmacen,
            fechaDesde,
            fechaHasta,
            familia,
            linea
        );

        kardexData = kardexData
            .OrderBy(k => k.Codigo)
            .ThenBy(k => k.Fecha)
            .ToList();
        isLoading = false;
    }

    private async Task ExportarAExcel()
    {
        if (string.Equals(cargo, "CAJERO", StringComparison.OrdinalIgnoreCase))
        {
            var headers = new[]
            {
                "Almacén", "Familia", "Línea", "Código", "Artículo", "Precio Venta",
                "Operación", "Fecha Operación", "Saldo Inicial", "Entrada", "Salida", "Saldo Final"
            };

            var datos = kardexData.Select(k => new object[]
            {
                k.Almacen,
                k.Familia,
                k.Linea,
                k.Codigo,
                k.Articulo,
                k.PrecioVenta?.ToString("0.00"),
                k.Operacion,
                k.Fecha?.ToString("dd/MM/yyyy"),
                k.SaldoInicial,
                k.Entrada,
                k.Salida,
                k.SaldoFinal
            }).ToArray();

            await JS.InvokeVoidAsync("exportToExcel", headers, datos, "KardexDetallado");
        }
        else
        {
            var headers = new[]
            {
                "Almacén", "Familia", "Línea", "Código", "Artículo", "Precio Compra", "Precio Venta",
                "Operación", "Entrada", "Salida", "Saldo Final", "Valor Entrada", "Valor Salida", "Valor Final"
            };

            var datos = kardexData.Select(k => new object[]
            {
                k.Almacen,
                k.Familia,
                k.Linea,
                k.Codigo,
                k.Articulo,
                k.PrecioCompra.ToString("0.00"),
                k.PrecioVenta?.ToString("0.00"),
                k.Operacion,
                k.Entrada,
                k.Salida,
                k.SaldoFinal,
                k.ValorizadoEntrada?.ToString("0.00"),
                k.ValorizadoSalida?.ToString("0.00"),
                k.ValorizadoFinal?.ToString("0.00")
            }).ToArray();

            await JS.InvokeVoidAsync("exportToExcel", headers, datos, "KardexDetallado");
        }
    }

    private async Task OnKeyEnter(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await BuscarKardex();
        }
    }
}